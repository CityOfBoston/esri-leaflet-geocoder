{"version":3,"file":"esri-leaflet-geocoder.js","sources":["../package.json","../src/Tasks/Geocode.js","../src/Tasks/ReverseGeocode.js","../src/Tasks/Suggest.js","../src/Services/Geocode.js","../src/Classes/GeosearchCore.js","../src/Providers/ArcgisOnlineGeocoder.js","../src/Controls/Geosearch.js","../src/Providers/FeatureLayer.js","../src/Providers/MapService.js","../src/Providers/GeocodeService.js","../src/EsriLeafletGeocoding.js"],"sourcesContent":["{\n  \"name\": \"esri-leaflet-geocoder\",\n  \"description\": \"Esri Geocoding utility and search plugin for Leaflet.\",\n  \"version\": \"2.2.8\",\n  \"author\": \"Patrick Arlt <parlt@esri.com> (http://patrickarlt.com)\",\n  \"contributors\": [\n    \"Patrick Arlt <parlt@esri.com> (http://patrickarlt.com)\",\n    \"John Gravois <jgravois@esri.com> (http://johngravois.com)\"\n  ],\n  \"dependencies\": {\n    \"esri-leaflet\": \"^2.0.3\",\n    \"leaflet\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"3.5.0\",\n    \"gh-release\": \"^2.0.0\",\n    \"http-server\": \"^0.10.0\",\n    \"imagemin\": \"^3.2.0\",\n    \"isparta\": \"^4.0.0\",\n    \"istanbul\": \"^0.4.2\",\n    \"karma\": \"^1.3.0\",\n    \"karma-chai-sinon\": \"^0.1.3\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-coverage\": \"^1.1.1\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-mocha-reporter\": \"^2.2.1\",\n    \"karma-sourcemap-loader\": \"^0.3.5\",\n    \"mkdirp\": \"^0.5.1\",\n    \"mocha\": \"^3.1.0\",\n    \"node-sass\": \"^3.2.0\",\n    \"parallelshell\": \"^2.0.0\",\n    \"phantomjs\": \"^1.9.8\",\n    \"rollup\": \"^0.25.4\",\n    \"rollup-plugin-json\": \"^2.0.0\",\n    \"rollup-plugin-node-resolve\": \"^1.4.0\",\n    \"rollup-plugin-uglify\": \"^0.3.1\",\n    \"semistandard\": \"^9.0.0\",\n    \"sinon\": \"^1.11.1\",\n    \"sinon-chai\": \"2.8.0\",\n    \"snazzy\": \"^5.0.0\",\n    \"uglify-js\": \"^2.6.1\",\n    \"watch\": \"^0.17.1\"\n  },\n  \"homepage\": \"https://github.com/Esri/esri-leaflet-geocoder\",\n  \"jsnext:main\": \"src/EsriLeafletGeocoding.js\",\n  \"jspm\": {\n    \"registry\": \"npm\",\n    \"format\": \"es6\",\n    \"main\": \"src/EsriLeafletGeocoding.js\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"main\": \"dist/esri-leaflet-geocoder-debug.js\",\n  \"browser\": \"dist/esri-leaflet-geocoder-debug.js\",\n  \"readmeFilename\": \"README.md\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:Esri/esri-leaflet-geocoder.git\"\n  },\n  \"scripts\": {\n    \"prebuild\": \"mkdirp dist\",\n    \"build\": \"rollup -c profiles/debug.js & rollup -c profiles/production.js & npm run css & npm run img\",\n    \"css\": \"node-sass ./src/esri-leaflet-geocoder.css ./dist/esri-leaflet-geocoder.css --output-style compressed\",\n    \"img\": \"imagemin ./src/img ./dist/img\",\n    \"lint\": \"semistandard | snazzy\",\n    \"prepare\": \"npm run build\",\n    \"pretest\": \"npm run build\",\n    \"release\": \"./scripts/release.sh\",\n    \"start-watch\": \"watch \\\"npm run build\\\" src\",\n    \"start\": \"parallelshell \\\"npm run start-watch\\\" \\\"http-server -p 5678 -c-1 -o\\\"\",\n    \"test\": \"npm run lint && karma start\"\n  },\n  \"semistandard\": {\n    \"globals\": [\n      \"expect\",\n      \"L\",\n      \"XMLHttpRequest\",\n      \"sinon\",\n      \"xhr\"\n    ]\n  },\n  \"style\": \"./dist/esri-leaflet-geocoder.css\"\n}\n","import {\n  latLng as LlatLng,\n  latLngBounds as LlatLngBounds\n} from 'leaflet';\nimport { Task, Util as EsriUtil } from 'esri-leaflet';\nimport { WorldGeocodingServiceUrl } from '../EsriLeafletGeocoding';\n\nexport var Geocode = Task.extend({\n  path: 'findAddressCandidates',\n\n  params: {\n    outSr: 4326,\n    forStorage: false,\n    outFields: '*',\n    maxLocations: 20\n  },\n\n  setters: {\n    'address': 'address',\n    'neighborhood': 'neighborhood',\n    'city': 'city',\n    'subregion': 'subregion',\n    'region': 'region',\n    'postal': 'postal',\n    'country': 'country',\n    'text': 'singleLine',\n    'category': 'category',\n    'token': 'token',\n    'key': 'magicKey',\n    'fields': 'outFields',\n    'forStorage': 'forStorage',\n    'maxLocations': 'maxLocations'\n  },\n\n  initialize: function (options) {\n    options = options || {};\n    options.url = options.url || WorldGeocodingServiceUrl;\n    Task.prototype.initialize.call(this, options);\n  },\n\n  within: function (bounds) {\n    bounds = LlatLngBounds(bounds);\n    this.params.searchExtent = EsriUtil.boundsToExtent(bounds);\n    return this;\n  },\n\n  nearby: function (latlng, radius) {\n    latlng = LlatLng(latlng);\n    this.params.location = latlng.lng + ',' + latlng.lat;\n    this.params.distance = Math.min(Math.max(radius, 2000), 50000);\n    return this;\n  },\n\n  run: function (callback, context) {\n    if (this.options.customParam) {\n      this.params[this.options.customParam] = this.params.singleLine;\n      delete this.params.singleLine;\n    }\n\n    return this.request(function (error, response) {\n      var processor = this._processGeocoderResponse;\n      var results = (!error) ? processor(response) : undefined;\n      callback.call(context, error, { results: results }, response);\n    }, this);\n  },\n\n  _processGeocoderResponse: function (response) {\n    var results = [];\n\n    for (var i = 0; i < response.candidates.length; i++) {\n      var candidate = response.candidates[i];\n      if (candidate.extent) {\n        var bounds = EsriUtil.extentToBounds(candidate.extent);\n      }\n\n      results.push({\n        text: candidate.address,\n        bounds: bounds,\n        score: candidate.score,\n        latlng: LlatLng(candidate.location.y, candidate.location.x),\n        properties: candidate.attributes\n      });\n    }\n    return results;\n  }\n});\n\nexport function geocode (options) {\n  return new Geocode(options);\n}\n\nexport default geocode;\n","import { latLng as LlatLng } from 'leaflet';\nimport { Task } from 'esri-leaflet';\nimport { WorldGeocodingServiceUrl } from '../EsriLeafletGeocoding';\n\nexport var ReverseGeocode = Task.extend({\n  path: 'reverseGeocode',\n\n  params: {\n    outSR: 4326,\n    returnIntersection: false\n  },\n\n  setters: {\n    'distance': 'distance',\n    'language': 'langCode',\n    'intersection': 'returnIntersection'\n  },\n\n  initialize: function (options) {\n    options = options || {};\n    options.url = options.url || WorldGeocodingServiceUrl;\n    Task.prototype.initialize.call(this, options);\n  },\n\n  latlng: function (latlng) {\n    latlng = LlatLng(latlng);\n    this.params.location = latlng.lng + ',' + latlng.lat;\n    return this;\n  },\n\n  run: function (callback, context) {\n    return this.request(function (error, response) {\n      var result;\n\n      if (!error) {\n        result = {\n          latlng: LlatLng(response.location.y, response.location.x),\n          address: response.address\n        };\n      } else {\n        result = undefined;\n      }\n\n      callback.call(context, error, result, response);\n    }, this);\n  }\n});\n\nexport function reverseGeocode (options) {\n  return new ReverseGeocode(options);\n}\n\nexport default reverseGeocode;\n","import {\n  latLng as LlatLng,\n  latLngBounds as LlatLngBounds\n} from 'leaflet';\nimport { Task, Util as EsriUtil } from 'esri-leaflet';\nimport { WorldGeocodingServiceUrl } from '../EsriLeafletGeocoding';\n\nexport var Suggest = Task.extend({\n  path: 'suggest',\n\n  params: {},\n\n  setters: {\n    text: 'text',\n    category: 'category',\n    countries: 'countryCode',\n    maxSuggestions: 'maxSuggestions'\n  },\n\n  initialize: function (options) {\n    options = options || {};\n    if (!options.url) {\n      options.url = WorldGeocodingServiceUrl;\n      options.supportsSuggest = true;\n    }\n    Task.prototype.initialize.call(this, options);\n  },\n\n  within: function (bounds) {\n    bounds = LlatLngBounds(bounds);\n    bounds = bounds.pad(0.5);\n    var center = bounds.getCenter();\n    var ne = bounds.getNorthWest();\n    this.params.location = center.lng + ',' + center.lat;\n    this.params.distance = Math.min(Math.max(center.distanceTo(ne), 2000), 50000);\n    this.params.searchExtent = EsriUtil.boundsToExtent(bounds);\n    return this;\n  },\n\n  nearby: function (latlng, radius) {\n    latlng = LlatLng(latlng);\n    this.params.location = latlng.lng + ',' + latlng.lat;\n    this.params.distance = Math.min(Math.max(radius, 2000), 50000);\n    return this;\n  },\n\n  run: function (callback, context) {\n    if (this.options.supportsSuggest) {\n      return this.request(function (error, response) {\n        callback.call(context, error, response, response);\n      }, this);\n    } else {\n      console.warn('this geocoding service does not support asking for suggestions');\n    }\n  }\n\n});\n\nexport function suggest (options) {\n  return new Suggest(options);\n}\n\nexport default suggest;\n","import { Service } from 'esri-leaflet';\nimport { WorldGeocodingServiceUrl } from '../EsriLeafletGeocoding';\nimport geocode from '../Tasks/Geocode';\nimport reverseGeocode from '../Tasks/ReverseGeocode';\nimport suggest from '../Tasks/Suggest';\n\nexport var GeocodeService = Service.extend({\n  initialize: function (options) {\n    options = options || {};\n    if (options.url) {\n      Service.prototype.initialize.call(this, options);\n      this._confirmSuggestSupport();\n    } else {\n      options.url = WorldGeocodingServiceUrl;\n      options.supportsSuggest = true;\n      Service.prototype.initialize.call(this, options);\n    }\n  },\n\n  geocode: function () {\n    return geocode(this);\n  },\n\n  reverse: function () {\n    return reverseGeocode(this);\n  },\n\n  suggest: function () {\n    // requires either the Esri World Geocoding Service or a <10.3 ArcGIS Server Geocoding Service that supports suggest.\n    return suggest(this);\n  },\n\n  _confirmSuggestSupport: function () {\n    this.metadata(function (error, response) {\n      if (error) { return; }\n      // pre 10.3 geocoding services dont list capabilities (and dont support maxLocations)\n      // only SOME individual services have been configured to support asking for suggestions\n      if (!response.capabilities) {\n        this.options.supportsSuggest = false;\n      } else if (response.capabilities.indexOf('Suggest') > -1) {\n        this.options.supportsSuggest = true;\n      } else {\n        this.options.supportsSuggest = false;\n      }\n      // whether the service supports suggest or not, utilize the metadata response to determine the appropriate parameter name for single line geocoding requests\n      this.options.customParam = response.singleLineAddressField.name;\n    }, this);\n  }\n});\n\nexport function geocodeService (options) {\n  return new GeocodeService(options);\n}\n\nexport default geocodeService;\n","import { Evented, Util, latLngBounds as LlatLngBounds } from 'leaflet';\n\nexport var GeosearchCore = Evented.extend({\n\n  options: {\n    zoomToResult: true,\n    useMapBounds: 12,\n    searchBounds: null\n  },\n\n  initialize: function (control, options) {\n    Util.setOptions(this, options);\n    this._control = control;\n\n    if (!options || !options.providers || !options.providers.length) {\n      throw new Error('You must specify at least one provider');\n    }\n\n    this._providers = options.providers;\n  },\n\n  _geocode: function (text, key, provider) {\n    var activeRequests = 0;\n    var allResults = [];\n    var bounds;\n\n    var callback = Util.bind(function (error, results) {\n      activeRequests--;\n      if (error) {\n        return;\n      }\n\n      if (results) {\n        allResults = allResults.concat(results);\n      }\n\n      if (activeRequests <= 0) {\n        bounds = this._boundsFromResults(allResults);\n\n        this.fire('results', {\n          results: allResults,\n          bounds: bounds,\n          latlng: (bounds) ? bounds.getCenter() : undefined,\n          text: text\n        }, true);\n\n        if (this.options.zoomToResult && bounds) {\n          this._control._map.fitBounds(bounds);\n        }\n\n        this.fire('load');\n      }\n    }, this);\n\n    if (key) {\n      activeRequests++;\n      provider.results(text, key, this._searchBounds(), callback);\n    } else {\n      for (var i = 0; i < this._providers.length; i++) {\n        activeRequests++;\n        this._providers[i].results(text, key, this._searchBounds(), callback);\n      }\n    }\n  },\n\n  _suggest: function (text) {\n    var activeRequests = this._providers.length;\n\n    var createCallback = Util.bind(function (text, provider) {\n      return Util.bind(function (error, suggestions) {\n        if (error) { return; }\n\n        var i;\n\n        activeRequests = activeRequests - 1;\n\n        if (text.length < 2) {\n          this._suggestions.innerHTML = '';\n          this._suggestions.style.display = 'none';\n          return;\n        }\n\n        if (suggestions.length) {\n          for (i = 0; i < suggestions.length; i++) {\n            suggestions[i].provider = provider;\n          }\n        } else {\n          // we still need to update the UI\n          this._control._renderSuggestions(suggestions);\n        }\n\n        if (provider._lastRender !== text && provider.nodes) {\n          for (i = 0; i < provider.nodes.length; i++) {\n            if (provider.nodes[i].parentElement) {\n              this._control._suggestions.removeChild(provider.nodes[i]);\n            }\n          }\n\n          provider.nodes = [];\n        }\n\n        if (suggestions.length && this._control._input.value === text) {\n          this._control.clearSuggestions(provider.nodes);\n\n          provider._lastRender = text;\n          provider.nodes = this._control._renderSuggestions(suggestions);\n          this._control._nodes = [];\n        }\n      }, this);\n    }, this);\n\n    this._pendingSuggestions = [];\n\n    for (var i = 0; i < this._providers.length; i++) {\n      var provider = this._providers[i];\n      var request = provider.suggestions(text, this._searchBounds(), createCallback(text, provider));\n      this._pendingSuggestions.push(request);\n    }\n  },\n\n  _searchBounds: function () {\n    if (this.options.searchBounds !== null) {\n      return this.options.searchBounds;\n    }\n\n    if (this.options.useMapBounds === false) {\n      return null;\n    }\n\n    if (this.options.useMapBounds === true) {\n      return this._control._map.getBounds();\n    }\n\n    if (this.options.useMapBounds <= this._control._map.getZoom()) {\n      return this._control._map.getBounds();\n    }\n\n    return null;\n  },\n\n  _boundsFromResults: function (results) {\n    if (!results.length) {\n      return;\n    }\n\n    var nullIsland = LlatLngBounds([0, 0], [0, 0]);\n    var resultBounds = [];\n    var resultLatlngs = [];\n\n    // collect the bounds and center of each result\n    for (var i = results.length - 1; i >= 0; i--) {\n      var result = results[i];\n\n      resultLatlngs.push(result.latlng);\n\n      // make sure bounds are valid and not 0,0. sometimes bounds are incorrect or not present\n      if (result.bounds && result.bounds.isValid() && !result.bounds.equals(nullIsland)) {\n        resultBounds.push(result.bounds);\n      }\n    }\n\n    // form a bounds object containing all center points\n    var bounds = LlatLngBounds(resultLatlngs);\n\n    // and extend it to contain all bounds objects\n    for (var j = 0; j < resultBounds.length; j++) {\n      bounds.extend(resultBounds[j]);\n    }\n\n    return bounds;\n  },\n\n  _getAttribution: function () {\n    var attribs = [];\n    var providers = this._providers;\n\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i].options.attribution) {\n        attribs.push(providers[i].options.attribution);\n      }\n    }\n\n    return attribs.join(', ');\n  }\n\n});\n\nexport function geosearchCore (control, options) {\n  return new GeosearchCore(control, options);\n}\n\nexport default geosearchCore;\n","import { GeocodeService } from '../Services/Geocode';\n\nexport var ArcgisOnlineProvider = GeocodeService.extend({\n  options: {\n    label: 'Places and Addresses',\n    maxResults: 5\n  },\n\n  suggestions: function (text, bounds, callback) {\n    var request = this.suggest().text(text);\n\n    if (bounds) {\n      request.within(bounds);\n    }\n\n    if (this.options.countries) {\n      request.countries(this.options.countries);\n    }\n\n    if (this.options.categories) {\n      request.category(this.options.categories);\n    }\n\n    // 15 is the maximum number of suggestions that can be returned\n    request.maxSuggestions(this.options.maxResults);\n\n    return request.run(function (error, results, response) {\n      var suggestions = [];\n      if (!error) {\n        while (response.suggestions.length && suggestions.length <= (this.options.maxResults - 1)) {\n          var suggestion = response.suggestions.shift();\n          if (!suggestion.isCollection) {\n            suggestions.push({\n              text: suggestion.text,\n              unformattedText: suggestion.text,\n              magicKey: suggestion.magicKey\n            });\n          }\n        }\n      }\n      callback(error, suggestions);\n    }, this);\n  },\n\n  results: function (text, key, bounds, callback) {\n    var request = this.geocode().text(text);\n\n    if (key) {\n      request.key(key);\n    }\n    // in the future Address/StreetName geocoding requests that include a magicKey will always only return one match\n    request.maxLocations(this.options.maxResults);\n\n    if (bounds) {\n      request.within(bounds);\n    }\n\n    if (this.options.forStorage) {\n      request.forStorage(true);\n    }\n\n    return request.run(function (error, response) {\n      callback(error, response.results);\n    }, this);\n  }\n});\n\nexport function arcgisOnlineProvider (options) {\n  return new ArcgisOnlineProvider(options);\n}\n\nexport default arcgisOnlineProvider;\n","import {\n  Control,\n  DomEvent,\n  DomUtil,\n  Evented,\n  Util,\n  latLngBounds as LlatLngBounds\n} from 'leaflet';\nimport { geosearchCore } from '../Classes/GeosearchCore';\nimport { arcgisOnlineProvider } from '../Providers/ArcgisOnlineGeocoder';\nimport { Util as EsriUtil } from 'esri-leaflet';\n\nexport var Geosearch = Control.extend({\n  includes: Evented.prototype,\n\n  options: {\n    position: 'topleft',\n    collapseAfterResult: true,\n    expanded: false,\n    allowMultipleResults: true,\n    placeholder: 'Search for places or addresses',\n    title: 'Location Search'\n  },\n\n  initialize: function (options) {\n    Util.setOptions(this, options);\n\n    if (!options || !options.providers || !options.providers.length) {\n      if (!options) {\n        options = {};\n      }\n      options.providers = [ arcgisOnlineProvider() ];\n    }\n\n    // instantiate the underlying class and pass along options\n    this._geosearchCore = geosearchCore(this, options);\n    this._geosearchCore._providers = options.providers;\n\n    // bubble each providers events to the control\n    this._geosearchCore.addEventParent(this);\n    for (var i = 0; i < this._geosearchCore._providers.length; i++) {\n      this._geosearchCore._providers[i].addEventParent(this);\n    }\n\n    this._geosearchCore._pendingSuggestions = [];\n\n    Control.prototype.initialize.call(options);\n  },\n\n  _renderSuggestions: function (suggestions) {\n    var currentGroup;\n\n    if (suggestions.length > 0) {\n      this._suggestions.style.display = 'block';\n    }\n    // set the maxHeight of the suggestions box to\n    // map height\n    // - suggestions offset (distance from top of suggestions to top of control)\n    // - control offset (distance from top of control to top of map)\n    // - 10 (extra padding)\n    this._suggestions.style.maxHeight = (this._map.getSize().y - this._suggestions.offsetTop - this._wrapper.offsetTop - 10) + 'px';\n\n    var nodes = [];\n    var list;\n    var header;\n    var suggestionTextArray = [];\n\n    for (var i = 0; i < suggestions.length; i++) {\n      var suggestion = suggestions[i];\n      if (!header && this._geosearchCore._providers.length > 1 && currentGroup !== suggestion.provider.options.label) {\n        header = DomUtil.create('span', 'geocoder-control-header', this._suggestions);\n        header.textContent = suggestion.provider.options.label;\n        header.innerText = suggestion.provider.options.label;\n        currentGroup = suggestion.provider.options.label;\n        nodes.push(header);\n      }\n\n      if (!list) {\n        list = DomUtil.create('ul', 'geocoder-control-list', this._suggestions);\n      }\n\n      if (suggestionTextArray.indexOf(suggestion.text) === -1) {\n        var suggestionItem = DomUtil.create('li', 'geocoder-control-suggestion', list);\n\n        suggestionItem.innerHTML = suggestion.text;\n        suggestionItem.provider = suggestion.provider;\n        suggestionItem['data-magic-key'] = suggestion.magicKey;\n        suggestionItem.unformattedText = suggestion.unformattedText;\n      } else {\n        for (var j = 0; j < list.childNodes.length; j++) {\n          // if the same text already appears in the list of suggestions, append an additional ObjectID to its magicKey instead\n          if (list.childNodes[j].innerHTML === suggestion.text) {\n            list.childNodes[j]['data-magic-key'] += ',' + suggestion.magicKey;\n          }\n        }\n      }\n      suggestionTextArray.push(suggestion.text);\n    }\n\n    DomUtil.removeClass(this._input, 'geocoder-control-loading');\n\n    nodes.push(list);\n\n    return nodes;\n  },\n\n  _boundsFromResults: function (results) {\n    if (!results.length) {\n      return;\n    }\n\n    var nullIsland = LlatLngBounds([0, 0], [0, 0]);\n    var resultBounds = [];\n    var resultLatlngs = [];\n\n    // collect the bounds and center of each result\n    for (var i = results.length - 1; i >= 0; i--) {\n      var result = results[i];\n\n      resultLatlngs.push(result.latlng);\n\n      // make sure bounds are valid and not 0,0. sometimes bounds are incorrect or not present\n      if (result.bounds && result.bounds.isValid() && !result.bounds.equals(nullIsland)) {\n        resultBounds.push(result.bounds);\n      }\n    }\n\n    // form a bounds object containing all center points\n    var bounds = LlatLngBounds(resultLatlngs);\n\n    // and extend it to contain all bounds objects\n    for (var j = 0; j < resultBounds.length; j++) {\n      bounds.extend(resultBounds[j]);\n    }\n\n    return bounds;\n  },\n\n  clear: function () {\n    this._suggestions.innerHTML = '';\n    this._suggestions.style.display = 'none';\n    this._input.value = '';\n\n    if (this.options.collapseAfterResult) {\n      this._input.placeholder = '';\n      DomUtil.removeClass(this._wrapper, 'geocoder-control-expanded');\n    }\n\n    if (!this._map.scrollWheelZoom.enabled() && this._map.options.scrollWheelZoom) {\n      this._map.scrollWheelZoom.enable();\n    }\n  },\n\n  clearSuggestions: function () {\n    if (this._nodes) {\n      for (var k = 0; k < this._nodes.length; k++) {\n        if (this._nodes[k].parentElement) {\n          this._suggestions.removeChild(this._nodes[k]);\n        }\n      }\n    }\n  },\n\n  _setupClick: function () {\n    DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n    this._input.focus();\n  },\n\n  disable: function () {\n    this._input.disabled = true;\n    DomUtil.addClass(this._input, 'geocoder-control-input-disabled');\n    DomEvent.removeListener(this._wrapper, 'click', this._setupClick, this);\n  },\n\n  enable: function () {\n    this._input.disabled = false;\n    DomUtil.removeClass(this._input, 'geocoder-control-input-disabled');\n    DomEvent.addListener(this._wrapper, 'click', this._setupClick, this);\n  },\n\n  getAttribution: function () {\n    var attribs = [];\n\n    for (var i = 0; i < this._providers.length; i++) {\n      if (this._providers[i].options.attribution) {\n        attribs.push(this._providers[i].options.attribution);\n      }\n    }\n\n    return attribs.join(', ');\n  },\n\n  geocodeSuggestion: function (e) {\n    var suggestionItem = e.target || e.srcElement;\n\n    // make sure and point at the actual 'geocoder-control-suggestion'\n    if (suggestionItem.classList.length < 1) {\n      suggestionItem = suggestionItem.parentNode;\n    }\n\n    this._geosearchCore._geocode(suggestionItem.unformattedText, suggestionItem['data-magic-key'], suggestionItem.provider);\n    this.clear();\n  },\n\n  onAdd: function (map) {\n    // include 'Powered by Esri' in map attribution\n    EsriUtil.setEsriAttribution(map);\n\n    this._map = map;\n    this._wrapper = DomUtil.create('div', 'geocoder-control');\n    this._input = DomUtil.create('input', 'geocoder-control-input leaflet-bar', this._wrapper);\n    this._input.title = this.options.title;\n\n    if (this.options.expanded) {\n      DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n      this._input.placeholder = this.options.placeholder;\n    }\n\n    this._suggestions = DomUtil.create('div', 'geocoder-control-suggestions leaflet-bar', this._wrapper);\n\n    var credits = this._geosearchCore._getAttribution();\n    map.attributionControl.addAttribution(credits);\n\n    DomEvent.addListener(this._input, 'focus', function (e) {\n      this._input.placeholder = this.options.placeholder;\n      DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n    }, this);\n\n    DomEvent.addListener(this._wrapper, 'click', this._setupClick, this);\n\n    // make sure both click and touch spawn an address/poi search\n    DomEvent.addListener(this._suggestions, 'mousedown', this.geocodeSuggestion, this);\n    DomEvent.addListener(this._suggestions, 'touchend', this.geocodeSuggestion, this);\n\n    DomEvent.addListener(this._input, 'blur', function (e) {\n      this.clear();\n    }, this);\n\n    DomEvent.addListener(this._input, 'keydown', function (e) {\n      var text = (e.target || e.srcElement).value;\n\n      DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n\n      var list = this._suggestions.querySelectorAll('.' + 'geocoder-control-suggestion');\n      var selected = this._suggestions.querySelectorAll('.' + 'geocoder-control-selected')[0];\n      var selectedPosition;\n\n      for (var i = 0; i < list.length; i++) {\n        if (list[i] === selected) {\n          selectedPosition = i;\n          break;\n        }\n      }\n\n      switch (e.keyCode) {\n        case 13:\n          /*\n            if an item has been selected, geocode it\n            if focus is on the input textbox, geocode only if multiple results are allowed and more than two characters are present, or if a single suggestion is displayed.\n            if less than two characters have been typed, abort the geocode\n          */\n          if (selected) {\n            this._geosearchCore._geocode(selected.unformattedText, selected['data-magic-key'], selected.provider);\n            this.clear();\n          } else if (this.options.allowMultipleResults && text.length >= 2) {\n            this._geosearchCore._geocode(this._input.value, undefined);\n            this.clear();\n          } else {\n            if (list.length === 1) {\n              DomUtil.addClass(list[0], 'geocoder-control-selected');\n              this._geosearchCore._geocode(list[0].innerHTML, list[0]['data-magic-key'], list[0].provider);\n            } else {\n              this.clear();\n              this._input.blur();\n            }\n          }\n          DomEvent.preventDefault(e);\n          break;\n        case 38:\n          if (selected) {\n            DomUtil.removeClass(selected, 'geocoder-control-selected');\n          }\n\n          var previousItem = list[selectedPosition - 1];\n\n          if (selected && previousItem) {\n            DomUtil.addClass(previousItem, 'geocoder-control-selected');\n          } else {\n            DomUtil.addClass(list[list.length - 1], 'geocoder-control-selected');\n          }\n          DomEvent.preventDefault(e);\n          break;\n        case 40:\n          if (selected) {\n            DomUtil.removeClass(selected, 'geocoder-control-selected');\n          }\n\n          var nextItem = list[selectedPosition + 1];\n\n          if (selected && nextItem) {\n            DomUtil.addClass(nextItem, 'geocoder-control-selected');\n          } else {\n            DomUtil.addClass(list[0], 'geocoder-control-selected');\n          }\n          DomEvent.preventDefault(e);\n          break;\n        default:\n          // when the input changes we should cancel all pending suggestion requests if possible to avoid result collisions\n          for (var x = 0; x < this._geosearchCore._pendingSuggestions.length; x++) {\n            var request = this._geosearchCore._pendingSuggestions[x];\n            if (request && request.abort && !request.id) {\n              request.abort();\n            }\n          }\n          break;\n      }\n    }, this);\n\n    DomEvent.addListener(this._input, 'keyup', Util.throttle(function (e) {\n      var key = e.which || e.keyCode;\n      var text = (e.target || e.srcElement).value;\n\n      // require at least 2 characters for suggestions\n      if (text.length < 2) {\n        this._suggestions.innerHTML = '';\n        this._suggestions.style.display = 'none';\n        DomUtil.removeClass(this._input, 'geocoder-control-loading');\n        return;\n      }\n\n      // if this is the escape key it will clear the input so clear suggestions\n      if (key === 27) {\n        this._suggestions.innerHTML = '';\n        this._suggestions.style.display = 'none';\n        return;\n      }\n\n      // if this is NOT the up/down arrows or enter make a suggestion\n      if (key !== 13 && key !== 38 && key !== 40) {\n        if (this._input.value !== this._lastValue) {\n          this._lastValue = this._input.value;\n          DomUtil.addClass(this._input, 'geocoder-control-loading');\n          this._geosearchCore._suggest(text);\n        }\n      }\n    }, 50, this), this);\n\n    DomEvent.disableClickPropagation(this._wrapper);\n\n    // when mouse moves over suggestions disable scroll wheel zoom if its enabled\n    DomEvent.addListener(this._suggestions, 'mouseover', function (e) {\n      if (map.scrollWheelZoom.enabled() && map.options.scrollWheelZoom) {\n        map.scrollWheelZoom.disable();\n      }\n    });\n\n    // when mouse moves leaves suggestions enable scroll wheel zoom if its disabled\n    DomEvent.addListener(this._suggestions, 'mouseout', function (e) {\n      if (!map.scrollWheelZoom.enabled() && map.options.scrollWheelZoom) {\n        map.scrollWheelZoom.enable();\n      }\n    });\n\n    this._geosearchCore.on('load', function (e) {\n      DomUtil.removeClass(this._input, 'geocoder-control-loading');\n      this.clear();\n      this._input.blur();\n    }, this);\n\n    return this._wrapper;\n  }\n});\n\nexport function geosearch (options) {\n  return new Geosearch(options);\n}\n\nexport default geosearch;\n","import { Util, geoJson, latLngBounds as LlatLngBounds } from 'leaflet';\nimport { FeatureLayerService } from 'esri-leaflet';\n\nexport var FeatureLayerProvider = FeatureLayerService.extend({\n  options: {\n    label: 'Feature Layer',\n    maxResults: 5,\n    bufferRadius: 1000,\n    formatSuggestion: function (feature) {\n      return feature.properties[this.options.searchFields[0]];\n    }\n  },\n\n  initialize: function (options) {\n    FeatureLayerService.prototype.initialize.call(this, options);\n    if (typeof this.options.searchFields === 'string') {\n      this.options.searchFields = [this.options.searchFields];\n    }\n    this._suggestionsQuery = this.query();\n    this._resultsQuery = this.query();\n  },\n\n  suggestions: function (text, bounds, callback) {\n    var query = this._suggestionsQuery.where(this._buildQuery(text))\n      .returnGeometry(false);\n\n    if (bounds) {\n      query.intersects(bounds);\n    }\n\n    if (this.options.idField) {\n      query.fields([this.options.idField].concat(this.options.searchFields));\n    }\n\n    var request = query.run(function (error, results, raw) {\n      if (error) {\n        callback(error, []);\n      } else {\n        this.options.idField = raw.objectIdFieldName;\n        var suggestions = [];\n        for (var i = results.features.length - 1; i >= 0; i--) {\n          var feature = results.features[i];\n          suggestions.push({\n            text: this.options.formatSuggestion.call(this, feature),\n            unformattedText: feature.properties[this.options.searchFields[0]],\n            magicKey: feature.id\n          });\n        }\n        callback(error, suggestions.slice(0, this.options.maxResults));\n      }\n    }, this);\n\n    return request;\n  },\n\n  results: function (text, key, bounds, callback) {\n    var query = this._resultsQuery;\n\n    if (key) {\n      delete query.params.where;\n      query.featureIds([key]);\n    } else {\n      query.where(this._buildQuery(text));\n    }\n\n    if (bounds) {\n      query.within(bounds);\n    }\n\n    return query.run(Util.bind(function (error, features) {\n      var results = [];\n      for (var i = 0; i < features.features.length; i++) {\n        var feature = features.features[i];\n        if (feature) {\n          var bounds = this._featureBounds(feature);\n\n          var result = {\n            latlng: bounds.getCenter(),\n            bounds: bounds,\n            text: this.options.formatSuggestion.call(this, feature),\n            properties: feature.properties,\n            geojson: feature\n          };\n\n          results.push(result);\n\n          // clear query parameters for the next search\n          delete this._resultsQuery.params['objectIds'];\n        }\n      }\n      callback(error, results);\n    }, this));\n  },\n\n  orderBy: function (fieldName, order) {\n    this._suggestionsQuery.orderBy(fieldName, order);\n  },\n\n  _buildQuery: function (text) {\n    var queryString = [];\n\n    for (var i = this.options.searchFields.length - 1; i >= 0; i--) {\n      var field = 'upper(\"' + this.options.searchFields[i] + '\")';\n\n      queryString.push(field + \" LIKE upper('%\" + text + \"%')\");\n    }\n\n    if (this.options.where) {\n      return this.options.where + ' AND (' + queryString.join(' OR ') + ')';\n    } else {\n      return queryString.join(' OR ');\n    }\n  },\n\n  _featureBounds: function (feature) {\n    var geojson = geoJson(feature);\n    if (feature.geometry.type === 'Point') {\n      var center = geojson.getBounds().getCenter();\n      var lngRadius = ((this.options.bufferRadius / 40075017) * 360) / Math.cos((180 / Math.PI) * center.lat);\n      var latRadius = (this.options.bufferRadius / 40075017) * 360;\n      return LlatLngBounds([center.lat - latRadius, center.lng - lngRadius], [center.lat + latRadius, center.lng + lngRadius]);\n    } else {\n      return geojson.getBounds();\n    }\n  }\n});\n\nexport function featureLayerProvider (options) {\n  return new FeatureLayerProvider(options);\n}\n\nexport default featureLayerProvider;\n","import { Util, geoJson, latLngBounds as LlatLngBounds } from 'leaflet';\nimport { MapService } from 'esri-leaflet';\n\nexport var MapServiceProvider = MapService.extend({\n  options: {\n    layers: [0],\n    label: 'Map Service',\n    bufferRadius: 1000,\n    maxResults: 5,\n    formatSuggestion: function (feature) {\n      return feature.properties[feature.displayFieldName] + ' <small>' + feature.layerName + '</small>';\n    }\n  },\n\n  initialize: function (options) {\n    MapService.prototype.initialize.call(this, options);\n    this._getIdFields();\n  },\n\n  suggestions: function (text, bounds, callback) {\n    var request = this.find().text(text).fields(this.options.searchFields).returnGeometry(false).layers(this.options.layers);\n\n    return request.run(function (error, results, raw) {\n      var suggestions = [];\n      if (!error) {\n        var count = Math.min(this.options.maxResults, results.features.length);\n        raw.results = raw.results.reverse();\n        for (var i = 0; i < count; i++) {\n          var feature = results.features[i];\n          var result = raw.results[i];\n          var layer = result.layerId;\n          var idField = this._idFields[layer];\n          feature.layerId = layer;\n          feature.layerName = this._layerNames[layer];\n          feature.displayFieldName = this._displayFields[layer];\n          if (idField) {\n            suggestions.push({\n              text: this.options.formatSuggestion.call(this, feature),\n              unformattedText: feature.properties[feature.displayFieldName],\n              magicKey: result.attributes[idField] + ':' + layer\n            });\n          }\n        }\n      }\n      callback(error, suggestions.reverse());\n    }, this);\n  },\n\n  results: function (text, key, bounds, callback) {\n    var results = [];\n    var request;\n\n    if (key) {\n      var featureId = key.split(':')[0];\n      var layer = key.split(':')[1];\n      request = this.query().layer(layer).featureIds(featureId);\n    } else {\n      request = this.find().text(text).fields(this.options.searchFields).layers(this.options.layers);\n    }\n\n    return request.run(function (error, features, response) {\n      if (!error) {\n        if (response.results) {\n          response.results = response.results.reverse();\n        }\n        for (var i = 0; i < features.features.length; i++) {\n          var feature = features.features[i];\n          layer = layer || response.results[i].layerId;\n\n          if (feature && layer !== undefined) {\n            var bounds = this._featureBounds(feature);\n            feature.layerId = layer;\n            feature.layerName = this._layerNames[layer];\n            feature.displayFieldName = this._displayFields[layer];\n\n            var result = {\n              latlng: bounds.getCenter(),\n              bounds: bounds,\n              text: this.options.formatSuggestion.call(this, feature),\n              properties: feature.properties,\n              geojson: feature\n            };\n\n            results.push(result);\n          }\n        }\n      }\n      callback(error, results.reverse());\n    }, this);\n  },\n\n  _featureBounds: function (feature) {\n    var geojson = geoJson(feature);\n    if (feature.geometry.type === 'Point') {\n      var center = geojson.getBounds().getCenter();\n      var lngRadius = ((this.options.bufferRadius / 40075017) * 360) / Math.cos((180 / Math.PI) * center.lat);\n      var latRadius = (this.options.bufferRadius / 40075017) * 360;\n      return LlatLngBounds([center.lat - latRadius, center.lng - lngRadius], [center.lat + latRadius, center.lng + lngRadius]);\n    } else {\n      return geojson.getBounds();\n    }\n  },\n\n  _layerMetadataCallback: function (layerid) {\n    return Util.bind(function (error, metadata) {\n      if (error) { return; }\n      this._displayFields[layerid] = metadata.displayField;\n      this._layerNames[layerid] = metadata.name;\n      for (var i = 0; i < metadata.fields.length; i++) {\n        var field = metadata.fields[i];\n        if (field.type === 'esriFieldTypeOID') {\n          this._idFields[layerid] = field.name;\n          break;\n        }\n      }\n    }, this);\n  },\n\n  _getIdFields: function () {\n    this._idFields = {};\n    this._displayFields = {};\n    this._layerNames = {};\n    for (var i = 0; i < this.options.layers.length; i++) {\n      var layer = this.options.layers[i];\n      this.get(layer, {}, this._layerMetadataCallback(layer));\n    }\n  }\n});\n\nexport function mapServiceProvider (options) {\n  return new MapServiceProvider(options);\n}\n\nexport default mapServiceProvider;\n","import { GeocodeService } from '../Services/Geocode';\n\nexport var GeocodeServiceProvider = GeocodeService.extend({\n  options: {\n    label: 'Geocode Server',\n    maxResults: 5\n  },\n\n  suggestions: function (text, bounds, callback) {\n    if (this.options.supportsSuggest) {\n      var request = this.suggest().text(text);\n      if (bounds) {\n        request.within(bounds);\n      }\n\n      return request.run(function (error, results, response) {\n        var suggestions = [];\n        if (!error) {\n          while (response.suggestions.length && suggestions.length <= (this.options.maxResults - 1)) {\n            var suggestion = response.suggestions.shift();\n            if (!suggestion.isCollection) {\n              suggestions.push({\n                text: suggestion.text,\n                unformattedText: suggestion.text,\n                magicKey: suggestion.magicKey\n              });\n            }\n          }\n        }\n        callback(error, suggestions);\n      }, this);\n    } else {\n      callback(undefined, []);\n      return false;\n    }\n  },\n\n  results: function (text, key, bounds, callback) {\n    var request = this.geocode().text(text);\n\n    if (key) {\n      request.key(key);\n    }\n\n    request.maxLocations(this.options.maxResults);\n\n    if (bounds) {\n      request.within(bounds);\n    }\n\n    return request.run(function (error, response) {\n      callback(error, response.results);\n    }, this);\n  }\n});\n\nexport function geocodeServiceProvider (options) {\n  return new GeocodeServiceProvider(options);\n}\n\nexport default geocodeServiceProvider;\n","export { version as VERSION } from '../package.json';\nexport var WorldGeocodingServiceUrl = 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/';\n\n// import tasks\nexport { Geocode, geocode } from './Tasks/Geocode';\nexport { ReverseGeocode, reverseGeocode } from './Tasks/ReverseGeocode';\nexport { Suggest, suggest } from './Tasks/Suggest';\n\n// import service\nexport { GeocodeService, geocodeService } from './Services/Geocode';\n\n// import control\nexport { Geosearch, geosearch } from './Controls/Geosearch';\n\n// import supporting class\nexport { GeosearchCore, geosearchCore } from './Classes/GeosearchCore';\n\n// import providers\nexport { ArcgisOnlineProvider, arcgisOnlineProvider } from './Providers/ArcgisOnlineGeocoder';\nexport { FeatureLayerProvider, featureLayerProvider } from './Providers/FeatureLayer';\nexport { MapServiceProvider, mapServiceProvider } from './Providers/MapService';\nexport { GeocodeServiceProvider, geocodeServiceProvider } from './Providers/GeocodeService';\n"],"names":["geocode","options","Geocode","reverseGeocode","ReverseGeocode","suggest","Suggest","geocodeService","GeocodeService","geosearchCore","control","GeosearchCore","arcgisOnlineProvider","ArcgisOnlineProvider","geosearch","Geosearch","featureLayerProvider","FeatureLayerProvider","mapServiceProvider","MapServiceProvider","geocodeServiceProvider","GeocodeServiceProvider","Task","extend","path","params","outSr","forStorage","outFields","maxLocations","setters","address","neighborhood","city","subregion","region","postal","country","text","category","token","key","fields","initialize","url","WorldGeocodingServiceUrl","prototype","call","this","within","bounds","LlatLngBounds","searchExtent","EsriUtil","boundsToExtent","nearby","latlng","radius","LlatLng","location","lng","lat","distance","Math","min","max","run","callback","context","customParam","singleLine","request","error","response","processor","_processGeocoderResponse","results","undefined","i","candidates","length","candidate","extent","extentToBounds","push","score","y","x","properties","attributes","outSR","returnIntersection","language","intersection","result","countries","maxSuggestions","supportsSuggest","pad","center","getCenter","ne","getNorthWest","distanceTo","console","warn","Service","_confirmSuggestSupport","reverse","metadata","capabilities","indexOf","singleLineAddressField","name","Evented","zoomToResult","useMapBounds","searchBounds","Util","setOptions","_control","providers","Error","_providers","_geocode","provider","activeRequests","allResults","bind","concat","_boundsFromResults","fire","_map","fitBounds","_searchBounds","_suggest","createCallback","suggestions","_suggestions","innerHTML","style","display","_renderSuggestions","_lastRender","nodes","parentElement","removeChild","_input","value","clearSuggestions","_nodes","_pendingSuggestions","getBounds","getZoom","nullIsland","resultBounds","resultLatlngs","isValid","equals","j","_getAttribution","attribs","attribution","join","label","maxResults","categories","suggestion","shift","isCollection","unformattedText","magicKey","Control","includes","position","collapseAfterResult","expanded","allowMultipleResults","placeholder","title","_geosearchCore","addEventParent","currentGroup","maxHeight","getSize","offsetTop","_wrapper","list","header","suggestionTextArray","DomUtil","create","textContent","innerText","suggestionItem","childNodes","removeClass","clear","scrollWheelZoom","enabled","enable","k","_setupClick","addClass","focus","disable","disabled","DomEvent","removeListener","addListener","getAttribution","geocodeSuggestion","e","target","srcElement","classList","parentNode","onAdd","map","setEsriAttribution","credits","attributionControl","addAttribution","selectedPosition","querySelectorAll","selected","keyCode","blur","preventDefault","previousItem","nextItem","abort","id","throttle","which","_lastValue","disableClickPropagation","on","FeatureLayerService","bufferRadius","formatSuggestion","feature","searchFields","_suggestionsQuery","query","_resultsQuery","where","_buildQuery","returnGeometry","intersects","idField","raw","objectIdFieldName","features","slice","featureIds","_featureBounds","geojson","orderBy","fieldName","order","queryString","field","geoJson","geometry","type","lngRadius","cos","PI","latRadius","MapService","layers","displayFieldName","layerName","_getIdFields","find","count","layer","layerId","_idFields","_layerNames","_displayFields","featureId","split","_layerMetadataCallback","layerid","displayField","get"],"mappings":"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"}